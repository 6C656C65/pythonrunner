name: release-packages

on:
  workflow_call:

jobs:
  release-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from file
        id: get_version
        run: |
          version=$(grep '^__version__' pythonrunner/__init__.py | cut -d'"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Generate CHANGELOG
        uses: tj-actions/github-changelog-generator@v1.15

      - name: Commit CHANGELOG.md
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for v${{ steps.get_version.outputs.version }}" || echo "No changes to commit"
          git push origin HEAD

      - name: Create Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install release dependencies
        run: pip install --no-cache-dir -U pip . twine

      - name: Upload to PyPI
        run: twine upload dist/*
        env:
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
